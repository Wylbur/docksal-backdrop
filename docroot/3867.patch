From cb2c0993b638cedd848db9548252dacba1466fd1 Mon Sep 17 00:00:00 2001
From: Greg Netsas <gregory@userfriendly.tech>
Date: Wed, 15 Dec 2021 02:21:24 +0200
Subject: [PATCH 1/7] Issue #5398: [PHP 8.1] Add PDO::ATTR_STRINGIFY_FETCHES to
 MySQL connection options

---
 core/includes/database/mysql/database.inc | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/core/includes/database/mysql/database.inc b/core/includes/database/mysql/database.inc
index bd24d81221..22e401d9d0 100644
--- a/core/includes/database/mysql/database.inc
+++ b/core/includes/database/mysql/database.inc
@@ -64,10 +64,17 @@ class DatabaseConnection_mysql extends DatabaseConnection {
       // rows that actually didn't have to be updated because the values didn't
       // change. This matches common behaviour among other database systems.
       PDO::MYSQL_ATTR_FOUND_ROWS => TRUE,
-      // So we don't have to mess around with cursors and unbuffered queries by default.
+      // So we don't have to mess around with cursors and unbuffered queries by
+      // default.
       PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => TRUE,
-      // Because MySQL's prepared statements skip the query cache, because it's dumb.
+      // Because MySQL's prepared statements skip the query cache, because it's
+      // dumb.
       PDO::ATTR_EMULATE_PREPARES => TRUE,
+      // Convert numeric values to strings when fetching. In PHP 8.1,
+      // PDO::ATTR_EMULATE_PREPARES now behaves the same way as non emulated
+      // prepares and returns integers. See https://externals.io/message/113294
+      // for further discussion.
+      PDO::ATTR_STRINGIFY_FETCHES => TRUE,
     );
     if (defined('PDO::MYSQL_ATTR_MULTI_STATEMENTS')) {
       // An added connection option in PHP 5.5.21+ to optionally limit SQL to a

From 7f11b3df69cc10ac9cb4733fb546bb2d3a336049 Mon Sep 17 00:00:00 2001
From: Greg Netsas <gregory@userfriendly.tech>
Date: Wed, 15 Dec 2021 04:09:41 +0200
Subject: [PATCH 2/7] ...switch tests from php 8.0 to 8.1

---
 .github/workflows/functional-tests.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/.github/workflows/functional-tests.yml b/.github/workflows/functional-tests.yml
index 03d5c60bbf..784aae097e 100644
--- a/.github/workflows/functional-tests.yml
+++ b/.github/workflows/functional-tests.yml
@@ -10,7 +10,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        php-versions: ['5.3', '7.4', '8.0']
+        php-versions: ['5.3', '7.4', '8.1']
         fraction: ['1/3', '2/3', '3/3']
         database-versions: ['mariadb-10.3']
 

From abb88bd31f3c01edb8727c7632aeee52a481b484 Mon Sep 17 00:00:00 2001
From: Greg Netsas <gregory@userfriendly.tech>
Date: Wed, 15 Dec 2021 19:32:35 +0200
Subject: [PATCH 3/7] ...add core/modules and core/includes

---
 core/includes/bootstrap.inc                   |  8 ++++--
 core/includes/common.inc                      | 25 ++++++++++---------
 core/includes/database/database.inc           | 16 ++++++++----
 core/includes/database/prefetch.inc           |  5 ++++
 core/includes/database/query.inc              |  1 +
 core/includes/file.inc                        |  2 +-
 core/includes/filetransfer/filetransfer.inc   |  4 ++-
 core/includes/session.inc                     |  2 +-
 core/includes/theme.inc                       |  2 ++
 core/includes/unicode.inc                     |  1 +
 core/modules/color/color.module               |  4 +--
 core/modules/comment/comment.entity.inc       |  4 +--
 core/modules/entity/entity.query.inc          |  1 +
 core/modules/filter/filter.module             |  4 +--
 core/modules/layout/tests/layout.test         |  2 +-
 .../simpletest/tests/filetransfer.test        |  2 +-
 core/modules/simpletest/tests/pager.test      |  2 +-
 .../simpletest/tests/url_alter_test.module    |  2 +-
 core/modules/syslog/syslog.module             |  4 +--
 core/modules/system/image.gd.inc              |  8 +++---
 core/modules/user/tests/user.test             |  4 +--
 core/modules/user/user.entity.inc             |  2 +-
 22 files changed, 65 insertions(+), 40 deletions(-)

diff --git a/core/includes/bootstrap.inc b/core/includes/bootstrap.inc
index 5117b8a4ee..5a74661ace 100644
--- a/core/includes/bootstrap.inc
+++ b/core/includes/bootstrap.inc
@@ -373,6 +373,7 @@ abstract class BackdropCacheArray implements ArrayAccess {
   /**
    * Implements ArrayAccess::offsetExists().
    */
+  #[\ReturnTypeWillChange]
   public function offsetExists($offset) {
     return $this->offsetGet($offset) !== NULL;
   }
@@ -380,6 +381,7 @@ abstract class BackdropCacheArray implements ArrayAccess {
   /**
    * Implements ArrayAccess::offsetGet().
    */
+  #[\ReturnTypeWillChange]
   public function offsetGet($offset) {
     if (isset($this->storage[$offset]) || array_key_exists($offset, $this->storage)) {
       return $this->storage[$offset];
@@ -392,6 +394,7 @@ abstract class BackdropCacheArray implements ArrayAccess {
   /**
    * Implements ArrayAccess::offsetSet().
    */
+  #[\ReturnTypeWillChange]
   public function offsetSet($offset, $value) {
     $this->storage[$offset] = $value;
   }
@@ -399,6 +402,7 @@ abstract class BackdropCacheArray implements ArrayAccess {
   /**
    * Implements ArrayAccess::offsetUnset().
    */
+  #[\ReturnTypeWillChange]
   public function offsetUnset($offset) {
     unset($this->storage[$offset]);
   }
@@ -2086,7 +2090,7 @@ function check_plain($text) {
  *   TRUE if the text is valid UTF-8, FALSE if not.
  */
 function backdrop_validate_utf8($text) {
-  if (strlen($text) == 0) {
+  if (strlen((string) $text) == 0) {
     return TRUE;
   }
   // With the PCRE_UTF8 modifier 'u', preg_match() fails silently on strings
@@ -2553,7 +2557,7 @@ function backdrop_random_bytes($count)  {
   // $random_state does not use backdrop_static as it stores random bytes.
   static $random_state, $bytes, $has_openssl;
 
-  $missing_bytes = $count - strlen($bytes);
+  $missing_bytes = $count - strlen((string) $bytes);
 
   if ($missing_bytes > 0) {
     // PHP versions prior 5.3.4 experienced openssl_random_pseudo_bytes()
diff --git a/core/includes/common.inc b/core/includes/common.inc
index 3b9a1d092b..fc88046ab4 100644
--- a/core/includes/common.inc
+++ b/core/includes/common.inc
@@ -770,7 +770,7 @@ function backdrop_parse_url($url) {
  *   The encoded path.
  */
 function backdrop_encode_path($path) {
-  return str_replace('%2F', '/', rawurlencode($path));
+  return str_replace('%2F', '/', rawurlencode((string) $path));
 }
 
 /**
@@ -1102,7 +1102,7 @@ function backdrop_http_request($url, array $options = array()) {
   // or PUT request. Some non-standard servers get confused by Content-Length in
   // at least HEAD/GET requests, and Squid always requires Content-Length in
   // POST/PUT requests.
-  $content_length = strlen($options['data']);
+  $content_length = strlen((string) $options['data']);
   if ($content_length > 0 || $options['method'] == 'POST' || $options['method'] == 'PUT') {
     $options['headers']['Content-Length'] = $content_length;
   }
@@ -1178,7 +1178,7 @@ function backdrop_http_request($url, array $options = array()) {
   $result->headers = array();
 
   // Parse the response headers.
-  while ($line = trim(array_shift($response))) {
+  while ($line = trim((string) array_shift($response))) {
     list($name, $value) = explode(':', $line, 2);
     $name = strtolower($name);
     if (isset($result->headers[$name]) && $name == 'set-cookie') {
@@ -1828,12 +1828,12 @@ function filter_xss($string, $allowed_tags = NULL) {
   // Store the text format.
   _filter_xss_split($allowed_tags, TRUE);
   // Remove NULL characters (ignored by some browsers).
-  $string = str_replace(chr(0), '', $string);
+  $string = str_replace(chr(0), '', (string) $string);
   // Remove Netscape 4 JS entities.
   $string = preg_replace('%&\s*\{[^}]*(\}\s*;?|$)%', '', $string);
 
   // Defuse all HTML entities.
-  $string = str_replace('&', '&amp;', $string);
+  $string = str_replace('&', '&amp;', (string) $string);
   // Change back only well-formed entities in our whitelist:
   // Decimal numeric entities.
   $string = preg_replace('/&amp;#([0-9]+;)/', '&#\1', $string);
@@ -2380,7 +2380,7 @@ function format_interval($interval, $granularity = 2, $langcode = NULL) {
     $key = explode('|', $key);
     if ($interval >= $value) {
       $output .= ($output ? ' ' : '') . format_plural(floor($interval / $value), $key[0], $key[1], array(), array('langcode' => $langcode));
-      $interval %= $value;
+      $interval %= (int) $interval % $value;
       $granularity--;
     }
 
@@ -2649,7 +2649,7 @@ function url($path = NULL, array $options = array()) {
   // Strip leading slashes from internal paths to prevent them becoming external
   // URLs without protocol. /example.com should not be turned into
   // //example.com.
-  $path = ltrim($path, '/');
+  $path = ltrim((string) $path, '/');
 
   global $base_url, $base_secure_url, $base_insecure_url;
 
@@ -2686,7 +2686,7 @@ function url($path = NULL, array $options = array()) {
   }
 
   $base = $options['absolute'] ? $options['base_url'] . '/' : base_path();
-  $prefix = empty($path) ? rtrim($options['prefix'], '/') : $options['prefix'];
+  $prefix = empty($path) ? rtrim((string) $options['prefix'], '/') : $options['prefix'];
 
   // Cache the clean URLs setting, as url() is called very frequently.
   static $backdrop_static_fast;
@@ -2741,8 +2741,8 @@ function url($path = NULL, array $options = array()) {
 /**
  * Returns TRUE if a path is external to Backdrop (e.g. http://example.com).
  *
- * If a path cannot be assessed by Backdrop's menu handler, then we must
- * treat it as potentially insecure.
+ * If a path cannot be assessed by Backdrop's menu handler, then we must treat
+ * it as potentially insecure.
  *
  * @param $path
  *   The internal path or external URL being linked to, such as "node/34" or
@@ -2752,11 +2752,12 @@ function url($path = NULL, array $options = array()) {
  *   Boolean TRUE or FALSE, where TRUE indicates an external path.
  */
 function url_is_external($path) {
+  $path = (string) $path;
   $colonpos = strpos($path, ':');
   // Some browsers treat \ as / so normalize to forward slashes.
   $path = str_replace('\\', '/', $path);
-  // Avoid calling backdrop_strip_dangerous_protocols(). If the path starts with 2
-  // slashes then it is always considered an external URL without an explicit
+  // Avoid calling backdrop_strip_dangerous_protocols(). If the path starts with
+  // 2 slashes then it is always considered an external URL without an explicit
   // protocol part.
   return (strpos($path, '//') === 0)
     // Leading control characters may be ignored or mishandled by browsers, so
diff --git a/core/includes/database/database.inc b/core/includes/database/database.inc
index 730a6a1133..4590a79075 100644
--- a/core/includes/database/database.inc
+++ b/core/includes/database/database.inc
@@ -22,11 +22,11 @@
  * The system is built atop PHP's PDO (PHP Data Objects) database API and
  * inherits much of its syntax and semantics.
  *
- * Most Backdrop database SELECT queries are performed by a call to db_query() or
- * db_query_range(). Module authors should also consider using the PagerDefault
- * Extender for queries that return results that need to be presented on
- * multiple pages (see https://drupal.org/node/508796), and the TableSort
- * Extender for generating appropriate queries for sortable tables
+ * Most Backdrop database SELECT queries are performed by a call to db_query()
+ * or db_query_range(). Module authors should also consider using the
+ * PagerDefault Extender for queries that return results that need to be
+ * presented on multiple pages (see https://drupal.org/node/508796), and the
+ * TableSort Extender for generating appropriate queries for sortable tables
  * (see https://drupal.org/node/1848372).
  *
  * For example, one might wish to return a list of the most recent 10 nodes
@@ -2263,6 +2263,7 @@ class DatabaseStatementBase extends PDOStatement implements DatabaseStatementInt
     $this->setFetchMode(PDO::FETCH_OBJ);
   }
 
+  #[\ReturnTypeWillChange]
   public function execute($args = array(), $options = array()) {
     if (isset($options['fetch'])) {
       if (is_string($options['fetch'])) {
@@ -2401,22 +2402,27 @@ class DatabaseStatementEmpty implements Iterator, DatabaseStatementInterface {
 
   /* Implementations of Iterator. */
 
+  #[\ReturnTypeWillChange]
   public function current() {
     return NULL;
   }
 
+  #[\ReturnTypeWillChange]
   public function key() {
     return NULL;
   }
 
+  #[\ReturnTypeWillChange]
   public function rewind() {
     // Nothing to do: our DatabaseStatement can't be rewound.
   }
 
+  #[\ReturnTypeWillChange]
   public function next() {
     // Do nothing, since this is an always-empty implementation.
   }
 
+  #[\ReturnTypeWillChange]
   public function valid() {
     return FALSE;
   }
diff --git a/core/includes/database/prefetch.inc b/core/includes/database/prefetch.inc
index 8184ac5a23..d91da96ba2 100644
--- a/core/includes/database/prefetch.inc
+++ b/core/includes/database/prefetch.inc
@@ -265,6 +265,7 @@ class DatabaseStatementPrefetch implements Iterator, DatabaseStatementInterface
    * @return
    *  The current row formatted as requested.
    */
+  #[\ReturnTypeWillChange]
   public function current() {
     if (isset($this->currentRow)) {
       switch ($this->fetchStyle) {
@@ -315,14 +316,17 @@ class DatabaseStatementPrefetch implements Iterator, DatabaseStatementInterface
 
   /* Implementations of Iterator. */
 
+  #[\ReturnTypeWillChange]
   public function key() {
     return $this->currentKey;
   }
 
+  #[\ReturnTypeWillChange]
   public function rewind() {
     // Nothing to do: our DatabaseStatement can't be rewound.
   }
 
+  #[\ReturnTypeWillChange]
   public function next() {
     if (!empty($this->data)) {
       $this->currentRow = reset($this->data);
@@ -334,6 +338,7 @@ class DatabaseStatementPrefetch implements Iterator, DatabaseStatementInterface
     }
   }
 
+  #[\ReturnTypeWillChange]
   public function valid() {
     return isset($this->currentRow);
   }
diff --git a/core/includes/database/query.inc b/core/includes/database/query.inc
index a491e43f7b..8107342d2b 100644
--- a/core/includes/database/query.inc
+++ b/core/includes/database/query.inc
@@ -1737,6 +1737,7 @@ class DatabaseCondition implements QueryConditionInterface, Countable {
    * size of its conditional array minus one, because one element is the
    * conjunction.
    */
+  #[\ReturnTypeWillChange]
   public function count() {
     return count($this->conditions) - 1;
   }
diff --git a/core/includes/file.inc b/core/includes/file.inc
index 894cb55e79..101c9753a1 100644
--- a/core/includes/file.inc
+++ b/core/includes/file.inc
@@ -196,7 +196,7 @@ function file_stream_wrapper_get_class($scheme) {
  * @see file_uri_target()
  */
 function file_uri_scheme($uri) {
-  $position = strpos($uri, '://');
+  $position = strpos((string) $uri, '://');
   return $position ? substr($uri, 0, $position) : FALSE;
 }
 
diff --git a/core/includes/filetransfer/filetransfer.inc b/core/includes/filetransfer/filetransfer.inc
index 289ea5aeb2..bec52e8924 100644
--- a/core/includes/filetransfer/filetransfer.inc
+++ b/core/includes/filetransfer/filetransfer.inc
@@ -377,7 +377,7 @@ class FileTransferException extends Exception {
   public $arguments;
 
   function __construct($message, $code = 0, $arguments = array()) {
-    parent::__construct($message, $code);
+    parent::__construct($message, (int) $code);
     $this->arguments = $arguments;
   }
 }
@@ -422,11 +422,13 @@ class SkipDotsRecursiveDirectoryIterator extends RecursiveDirectoryIterator {
     $this->skipdots();
   }
 
+  #[\ReturnTypeWillChange]
   function rewind() {
     parent::rewind();
     $this->skipdots();
   }
 
+  #[\ReturnTypeWillChange]
   function next() {
     parent::next();
     $this->skipdots();
diff --git a/core/includes/session.inc b/core/includes/session.inc
index 92436b8966..5457f6fbff 100644
--- a/core/includes/session.inc
+++ b/core/includes/session.inc
@@ -106,7 +106,7 @@ function _backdrop_session_read($sid) {
   // active user.
   if ($user && $user->uid > 0 && $user->status == 1) {
     // This is done to unserialize the data member of $user.
-    $user->data = unserialize($user->data);
+    $user->data = unserialize((string) $user->data);
 
     // Add roles element to $user.
     $user->roles = db_query("SELECT role FROM {users_roles} WHERE uid = :uid", array(':uid' => $user->uid))->fetchCol();
diff --git a/core/includes/theme.inc b/core/includes/theme.inc
index 559390786f..2ef2f339b3 100644
--- a/core/includes/theme.inc
+++ b/core/includes/theme.inc
@@ -429,6 +429,7 @@ class ThemeRegistry Extends BackdropCacheArray {
     return array_fill_keys(array_keys($this->completeRegistry), NULL);
   }
 
+  #[\ReturnTypeWillChange]
   public function offsetExists($offset) {
     // Since the theme registry allows for theme hooks to be requested that
     // are not registered, just check the existence of the key in the registry.
@@ -437,6 +438,7 @@ class ThemeRegistry Extends BackdropCacheArray {
     return array_key_exists($offset, $this->storage);
   }
 
+  #[\ReturnTypeWillChange]
   public function offsetGet($offset) {
     // If the offset is set but empty, it is a registered theme hook that has
     // not yet been requested. Offsets that do not exist at all were not
diff --git a/core/includes/unicode.inc b/core/includes/unicode.inc
index 30dbf8e1b9..d92d86ec79 100644
--- a/core/includes/unicode.inc
+++ b/core/includes/unicode.inc
@@ -597,6 +597,7 @@ function backdrop_ucfirst($text) {
  */
 function backdrop_substr($text, $start, $length = NULL) {
   global $multibyte;
+  $text = (string) $text;
   if ($multibyte == UNICODE_MULTIBYTE) {
     return $length === NULL ? mb_substr($text, $start) : mb_substr($text, $start, $length);
   }
diff --git a/core/modules/color/color.module b/core/modules/color/color.module
index f9cacdfdb3..f406f06b37 100644
--- a/core/modules/color/color.module
+++ b/core/modules/color/color.module
@@ -879,7 +879,7 @@ function _color_unpack($hex, $normalize = FALSE) {
   }
   $c = hexdec($hex);
   for ($i = 16; $i >= 0; $i -= 8) {
-    $out[] = (($c >> $i) & 0xFF) / ($normalize ? 255 : 1);
+    $out[] = (int) ((($c >> $i) & 0xFF) / ($normalize ? 255 : 1));
   }
 
   return $out;
@@ -891,7 +891,7 @@ function _color_unpack($hex, $normalize = FALSE) {
 function _color_pack($rgb, $normalize = FALSE) {
   $out = 0;
   foreach ($rgb as $k => $v) {
-    $out |= (($v * ($normalize ? 255 : 1)) << (16 - $k * 8));
+    $out |= (((int) $v * ($normalize ? 255 : 1)) << (16 - $k * 8));
   }
 
   return '#' . str_pad(dechex($out), 6, 0, STR_PAD_LEFT);
diff --git a/core/modules/comment/comment.entity.inc b/core/modules/comment/comment.entity.inc
index 57f166b163..3d55af77ba 100644
--- a/core/modules/comment/comment.entity.inc
+++ b/core/modules/comment/comment.entity.inc
@@ -278,7 +278,7 @@ class CommentStorageController extends EntityDatabaseStorageController {
         // by retrieving the maximum thread level.
         $max = db_query('SELECT MAX(thread) FROM {comment} WHERE nid = :nid', array(':nid' => $comment->nid))->fetchField();
         // Strip the "/" from the end of the thread.
-        $max = rtrim($max, '/');
+        $max = rtrim((string) $max, '/');
         // We need to get the value at the correct depth.
         $parts = explode('.', $max);
         $firstsegment = $parts[0];
@@ -305,7 +305,7 @@ class CommentStorageController extends EntityDatabaseStorageController {
         }
         else {
           // Strip the "/" at the end of the thread.
-          $max = rtrim($max, '/');
+          $max = rtrim((string) $max, '/');
           // Get the value at the correct depth.
           $parts = explode('.', $max);
           $parent_depth = count(explode('.', $parent->thread));
diff --git a/core/modules/entity/entity.query.inc b/core/modules/entity/entity.query.inc
index 6f8f297394..49b3184c67 100644
--- a/core/modules/entity/entity.query.inc
+++ b/core/modules/entity/entity.query.inc
@@ -560,6 +560,7 @@ class EntityFieldQuery {
    * @return EntityFieldQuery
    *   The called object.
    */
+  #[\ReturnTypeWillChange]
   public function count() {
     $this->count = TRUE;
     return $this;
diff --git a/core/modules/filter/filter.module b/core/modules/filter/filter.module
index 0a072c108a..834d83a06f 100644
--- a/core/modules/filter/filter.module
+++ b/core/modules/filter/filter.module
@@ -1185,7 +1185,7 @@ function check_markup($text, $format_id = NULL, $langcode = '', $cache = FALSE)
 
   // Convert all Windows and Mac newlines to a single newline, so filters only
   // need to deal with one possibility.
-  $text = str_replace(array("\r\n", "\r"), "\n", $text);
+  $text = str_replace(array("\r\n", "\r"), "\n", (string) $text);
 
   // Get a complete list of filters, ordered properly.
   $filters = $format->filters;
@@ -2393,7 +2393,7 @@ function _filter_url_trim($text, $length = NULL) {
   }
 
   // Use +3 for '...' string length.
-  if ($_length && strlen($text) > $_length + 3) {
+  if ($_length && strlen((string) $text) > $_length + 3) {
     $text = substr($text, 0, $_length) . '...';
   }
 
diff --git a/core/modules/layout/tests/layout.test b/core/modules/layout/tests/layout.test
index 0fc850a59d..206239b674 100644
--- a/core/modules/layout/tests/layout.test
+++ b/core/modules/layout/tests/layout.test
@@ -1925,7 +1925,7 @@ class LayoutBlockTest extends BackdropWebTestCase {
     $good_realpath_filename = backdrop_realpath('temporary://' . $good_filename);
     imagejpeg($good_image, $good_realpath_filename);
 
-    $bad_image =  imagecreate(1024, 260);
+    $bad_image = imagecreate(1024, 260);
     imagecolorallocate($bad_image, 255, 0, 0); // Red image.
     $bad_filename = 'bad.jpg';
     $bad_realpath_filename = backdrop_realpath('temporary://' . $bad_filename);
diff --git a/core/modules/simpletest/tests/filetransfer.test b/core/modules/simpletest/tests/filetransfer.test
index 00fc85e2d3..08618bcdbf 100644
--- a/core/modules/simpletest/tests/filetransfer.test
+++ b/core/modules/simpletest/tests/filetransfer.test
@@ -106,7 +106,7 @@ class TestFileTransfer extends FileTransfer {
     $parts = explode(':', $this->hostname);
     $port = (count($parts) == 2) ? $parts[1] : $this->port;
     $this->connection = new MockTestConnection();
-    $this->connection->connectionString = 'test://' . urlencode($this->username) . ':' . urlencode($this->password) . "@$this->host:$this->port/";
+    $this->connection->connectionString = 'test://' . urlencode((string) $this->username) . ':' . urlencode((string) $this->password) . "@$this->host:$this->port/";
   }
 
   function copyFileJailed($source, $destination) {
diff --git a/core/modules/simpletest/tests/pager.test b/core/modules/simpletest/tests/pager.test
index 64f52dc759..0e755bc2c9 100644
--- a/core/modules/simpletest/tests/pager.test
+++ b/core/modules/simpletest/tests/pager.test
@@ -143,7 +143,7 @@ class PagerFunctionalWebTestCase extends BackdropWebTestCase {
     if (!isset($message)) {
       $message = "Class .$class found.";
     }
-    $this->assertTrue(strpos($element['class'], $class) !== FALSE, $message);
+    $this->assertTrue(strpos((string) $element['class'], $class) !== FALSE, $message);
   }
 
   /**
diff --git a/core/modules/simpletest/tests/url_alter_test.module b/core/modules/simpletest/tests/url_alter_test.module
index 73ec55b97a..f43dab0e89 100644
--- a/core/modules/simpletest/tests/url_alter_test.module
+++ b/core/modules/simpletest/tests/url_alter_test.module
@@ -52,7 +52,7 @@ function url_alter_test_url_inbound_alter(&$path, $original_path, $path_language
  */
 function url_alter_test_url_outbound_alter(&$path, &$options, $original_path) {
   // Rewrite user/uid to user/username.
-  if (preg_match('!^user/([0-9]+)(/.*)?!', $path, $matches)) {
+  if (preg_match('!^user/([0-9]+)(/.*)?!', (string) $path, $matches)) {
     if ($account = user_load($matches[1])) {
       $matches += array(2 => '');
       $path = 'user/' . $account->name . $matches[2];
diff --git a/core/modules/syslog/syslog.module b/core/modules/syslog/syslog.module
index 112aecb415..295ef2ee5b 100644
--- a/core/modules/syslog/syslog.module
+++ b/core/modules/syslog/syslog.module
@@ -109,8 +109,8 @@ function syslog_watchdog(array $log_entry) {
     '!request_uri' => $log_entry['request_uri'],
     '!referer'     => $log_entry['referer'],
     '!uid'         => $log_entry['uid'],
-    '!link'        => strip_tags($log_entry['link']),
-    '!message'     => strip_tags(!isset($log_entry['variables']) ? $log_entry['message'] : strtr($log_entry['message'], $log_entry['variables'])),
+    '!link'        => strip_tags((string) $log_entry['link']),
+    '!message'     => strip_tags((string) (!isset($log_entry['variables']) ? $log_entry['message'] : strtr($log_entry['message'], $log_entry['variables']))),
   ));
 
   syslog($log_entry['severity'], $message);
diff --git a/core/modules/system/image.gd.inc b/core/modules/system/image.gd.inc
index 1e1fca0394..e9c52d3d45 100644
--- a/core/modules/system/image.gd.inc
+++ b/core/modules/system/image.gd.inc
@@ -171,6 +171,8 @@ function image_gd_rotate(stdClass $image, $degrees, $background = NULL) {
  * @see image_crop()
  */
 function image_gd_crop(stdClass $image, $x, $y, $width, $height, $background = NULL) {
+  $width = (int) $width;
+  $height = (int) $height;
   $res = image_gd_create_tmp($image, $width, $height);
 
   // Convert the hexadecimal background value to a color index value.
@@ -180,9 +182,9 @@ function image_gd_crop(stdClass $image, $x, $y, $width, $height, $background = N
   imagefill($res, 0, 0, $background);
 
   // Copy the source image to our new destination image. We use
-  // $image->info['width'] instead of $width because we are copying using the
-  // source image's width and height, not the destination width and height.
-  if (!imagecopyresampled($res, $image->resource, -$x, -$y, 0, 0, $image->info['width'], $image->info['height'], $image->info['width'], $image->info['height'])) {
+  // $image->info['width'] instead of $width because we are copying the source
+  // image's width and height, not the destination width and height.
+  if (!imagecopyresampled($res, $image->resource, (int) -$x, (int) -$y, 0, 0, $image->info['width'], $image->info['height'], $image->info['width'], $image->info['height'])) {
     return FALSE;
   }
 
diff --git a/core/modules/user/tests/user.test b/core/modules/user/tests/user.test
index 3e8bc0db5a..33a1b1a869 100644
--- a/core/modules/user/tests/user.test
+++ b/core/modules/user/tests/user.test
@@ -1079,7 +1079,7 @@ class UserPictureTestCase extends BackdropWebTestCase {
       $this->assertRaw($text, 'File size cited as reason for failure.');
 
       // Check if file is not uploaded.
-      $this->assertFalse(is_file($pic_path), 'File was not uploaded.');
+      $this->assertFalse(is_file((string) $pic_path), 'File was not uploaded.');
     }
   }
 
@@ -1113,7 +1113,7 @@ class UserPictureTestCase extends BackdropWebTestCase {
       $this->assertRaw($text, 'Checking response on invalid image (dimensions).');
 
       // Check if file is not uploaded.
-      $this->assertFalse(is_file($pic_path), 'File was not uploaded.');
+      $this->assertFalse(is_file((string) $pic_path), 'File was not uploaded.');
     }
   }
 
diff --git a/core/modules/user/user.entity.inc b/core/modules/user/user.entity.inc
index 4b1b4b77c9..bd525bdb3d 100644
--- a/core/modules/user/user.entity.inc
+++ b/core/modules/user/user.entity.inc
@@ -285,7 +285,7 @@ class UserStorageController extends EntityDatabaseStorageController {
       if ($record->picture) {
         $picture_fids[] = $record->picture;
       }
-      $queried_users[$key]->data = unserialize($record->data);
+      $queried_users[$key]->data = unserialize((string) $record->data);
       $queried_users[$key]->roles = array();
       if ($record->uid) {
         $queried_users[$record->uid]->roles[] = BACKDROP_AUTHENTICATED_ROLE;

From 603a80d4722ecdc136f474c995cdd49b3dbc12b1 Mon Sep 17 00:00:00 2001
From: Greg Netsas <gregory@userfriendly.tech>
Date: Wed, 15 Dec 2021 19:58:01 +0200
Subject: [PATCH 4/7] ...oops

---
 core/includes/common.inc | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/core/includes/common.inc b/core/includes/common.inc
index fc88046ab4..9d5c71f2b7 100644
--- a/core/includes/common.inc
+++ b/core/includes/common.inc
@@ -2354,13 +2354,13 @@ function format_size($size, $langcode = NULL) {
 /**
  * Formats a time interval with the requested granularity.
  *
- * @param $interval
+ * @param int $interval
  *   The length of the interval in seconds.
- * @param $granularity
+ * @param int $granularity
  *   How many different units to display in the string.
- * @param $langcode
- *   Optional language code to translate to a language other than
- *   what is used to display the page.
+ * @param string $langcode
+ *   Optional language code to translate to a language other than what is used
+ *   to display the page.
  *
  * @return
  *   A translated string representation of the interval.
@@ -2380,7 +2380,7 @@ function format_interval($interval, $granularity = 2, $langcode = NULL) {
     $key = explode('|', $key);
     if ($interval >= $value) {
       $output .= ($output ? ' ' : '') . format_plural(floor($interval / $value), $key[0], $key[1], array(), array('langcode' => $langcode));
-      $interval %= (int) $interval % $value;
+      $interval = (int) $interval % $value;
       $granularity--;
     }
 

From 8d1987760c9058490875edaeaa3d2b320cd09a13 Mon Sep 17 00:00:00 2001
From: Greg Netsas <gregory@userfriendly.tech>
Date: Wed, 15 Dec 2021 21:36:48 +0200
Subject: [PATCH 5/7] ...fix explode() in getOverride() in config.inc

---
 core/includes/config.inc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/core/includes/config.inc b/core/includes/config.inc
index 155525c3f9..39d6431cdf 100644
--- a/core/includes/config.inc
+++ b/core/includes/config.inc
@@ -698,7 +698,7 @@ class Config {
    */
   public function getOverride($key) {
     $value = NULL;
-    $parts = explode('.', $key);
+    $parts = explode('.', (string) $key);
     $popped_parts = array();
     while ($parts) {
       $assembled_key = implode('.', $parts);

From 4f8f1e5bcd8b957f7b1a91d081542d604d5c4b3b Mon Sep 17 00:00:00 2001
From: Greg Netsas <gregory@userfriendly.tech>
Date: Wed, 15 Dec 2021 21:53:16 +0200
Subject: [PATCH 6/7] ...more fixes

---
 core/includes/common.inc                     | 3 +--
 core/modules/path/path.module                | 2 +-
 core/modules/views/templates/views.theme.inc | 4 ++--
 3 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/core/includes/common.inc b/core/includes/common.inc
index 9d5c71f2b7..38000cd736 100644
--- a/core/includes/common.inc
+++ b/core/includes/common.inc
@@ -8509,7 +8509,6 @@ function watchdog_severity_levels() {
   );
 }
 
-
 /**
  * Explodes a string of tags into an array.
  *
@@ -8519,7 +8518,7 @@ function backdrop_explode_tags($tags) {
   // This regexp allows the following types of user input:
   // this, "somecompany, llc", "and ""this"" w,o.rks", foo bar
   $regexp = '%(?:^|,\ *)("(?>[^"]*)(?>""[^"]* )*"|(?: [^",]*))%x';
-  preg_match_all($regexp, $tags, $matches);
+  preg_match_all($regexp, (string) $tags, $matches);
   $typed_tags = array_unique($matches[1]);
 
   $tags = array();
diff --git a/core/modules/path/path.module b/core/modules/path/path.module
index 6ac302b4e4..1aa95a729b 100644
--- a/core/modules/path/path.module
+++ b/core/modules/path/path.module
@@ -641,7 +641,7 @@ function path_get_pattern_by_entity_type($entity_type, $bundle = '', $langcode =
     $variables[] = "{$entity_type}_pattern";
 
     foreach ($variables as $variable) {
-      if ($pattern = trim($config->get($variable))) {
+      if ($pattern = trim((string) $config->get($variable))) {
         break;
       }
     }
diff --git a/core/modules/views/templates/views.theme.inc b/core/modules/views/templates/views.theme.inc
index e05adc65f3..7db43f7ee0 100644
--- a/core/modules/views/templates/views.theme.inc
+++ b/core/modules/views/templates/views.theme.inc
@@ -20,11 +20,11 @@ function _views_theme_functions($hook, $view, $display = NULL) {
   if ($display) {
     $themes[] = $hook . '__' . $view->name . '__' . $display->id;
     $themes[] = $hook . '__' . $display->id;
-    $themes[] = $hook . '__' . preg_replace('/[^a-z0-9]/', '_', strtolower($view->tag));
+    $themes[] = $hook . '__' . preg_replace('/[^a-z0-9]/', '_', strtolower((string) $view->tag));
 
     // Add theme suggestions foreach single tag.
     foreach (backdrop_explode_tags($view->tag) as $tag) {
-      $themes[] = $hook . '__' . preg_replace('/[^a-z0-9]/', '_', strtolower($tag));
+      $themes[] = $hook . '__' . preg_replace('/[^a-z0-9]/', '_', strtolower((string) $tag));
     }
 
     if ($display->id != $display->display_plugin) {

From 8155f880ea1b9f0fc9ecd51047e7847d583c7bf5 Mon Sep 17 00:00:00 2001
From: Greg Netsas <gregory@userfriendly.tech>
Date: Wed, 15 Dec 2021 22:44:39 +0200
Subject: [PATCH 7/7] ...some more fixes

---
 core/includes/bootstrap.inc              | 2 +-
 core/includes/common.inc                 | 3 ++-
 core/includes/date.class.inc             | 1 +
 core/includes/token.inc                  | 2 +-
 core/modules/file/file.module            | 2 +-
 core/modules/file/file.theme.inc         | 2 +-
 core/modules/layout/layout.admin.inc     | 2 +-
 core/modules/path/path.module            | 2 +-
 core/modules/simpletest/tests/pager.test | 2 +-
 9 files changed, 10 insertions(+), 8 deletions(-)

diff --git a/core/includes/bootstrap.inc b/core/includes/bootstrap.inc
index 5a74661ace..02c669e654 100644
--- a/core/includes/bootstrap.inc
+++ b/core/includes/bootstrap.inc
@@ -2062,7 +2062,7 @@ function format_string($string, array $args = array()) {
  * @ingroup sanitization
  */
 function check_plain($text) {
-  return htmlspecialchars($text, ENT_QUOTES, 'UTF-8');
+  return htmlspecialchars((string) $text, ENT_QUOTES, 'UTF-8');
 }
 
 /**
diff --git a/core/includes/common.inc b/core/includes/common.inc
index 38000cd736..2e81305adb 100644
--- a/core/includes/common.inc
+++ b/core/includes/common.inc
@@ -3301,7 +3301,8 @@ function backdrop_set_time_limit($time_limit) {
  *   The path to the requested item or an empty string if the item is not found.
  */
 function backdrop_get_path($type, $name) {
-  return dirname(backdrop_get_filename($type, $name));
+  $path = backdrop_get_filename($type, $name);
+  return dirname((string) $path);
 }
 
 /**
diff --git a/core/includes/date.class.inc b/core/includes/date.class.inc
index fbb5a93574..62cb11d22c 100644
--- a/core/includes/date.class.inc
+++ b/core/includes/date.class.inc
@@ -6,6 +6,7 @@
  * This class provides granularity handling, merge functionality and
  * slightly more flexible initialization parameters.
  */
+#[\ReturnTypeWillChange]
 class BackdropDateTime extends DateTime {
   public $granularity = array();
   public $errors = array();
diff --git a/core/includes/token.inc b/core/includes/token.inc
index 7604971776..b5ea80b541 100644
--- a/core/includes/token.inc
+++ b/core/includes/token.inc
@@ -120,7 +120,7 @@ function token_scan($text) {
     :              # : - separator
     ([^\[\]]*)     # match $name not containing [ or ]
     \]             # ] - pattern end
-    /x', $text, $matches);
+    /x', (string) $text, $matches);
 
   $types = $matches[1];
   $tokens = $matches[2];
diff --git a/core/modules/file/file.module b/core/modules/file/file.module
index 48857eddfe..0f01ce8f7f 100644
--- a/core/modules/file/file.module
+++ b/core/modules/file/file.module
@@ -2022,7 +2022,7 @@ function file_fnmatch($pattern, $string) {
   if (!function_exists('fnmatch')) {
     return preg_match("#^" . strtr(preg_quote($pattern, '#'), array('\*' => '.*', '\?' => '.', '\[' => '[', '\]' => ']')) . "$#", $string);
   }
-  return fnmatch($pattern, $string);
+  return fnmatch((string) $pattern, (string) $string);
 }
 
 function file_get_mimetype_type($file) {
diff --git a/core/modules/file/file.theme.inc b/core/modules/file/file.theme.inc
index 0d7373adc1..866fa444ba 100644
--- a/core/modules/file/file.theme.inc
+++ b/core/modules/file/file.theme.inc
@@ -269,7 +269,7 @@ function theme_file_upload_help($variables) {
 
   $descriptions = array();
 
-  if (strlen($description)) {
+  if (strlen((string) $description)) {
     $descriptions[] = $description;
   }
   if (isset($upload_validators['file_validate_size'])) {
diff --git a/core/modules/layout/layout.admin.inc b/core/modules/layout/layout.admin.inc
index fc9e34c2c3..f0bd45ea45 100644
--- a/core/modules/layout/layout.admin.inc
+++ b/core/modules/layout/layout.admin.inc
@@ -506,7 +506,7 @@ function layout_settings_form($form, &$form_state, Layout $layout) {
   // a misconfiguration of the layout.
   $layout_path = $layout->getPath();
   $router_item = menu_get_item($layout_path);
-  if ($router_item && $router_item['path'] !== $layout_path && substr_count($router_item['path'], '/') === substr_count($layout_path, '/') && layout_context_required_by_path($router_item['path'])) {
+  if ($router_item && $router_item['path'] !== $layout_path && substr_count((string) $router_item['path'], '/') === substr_count((string) $layout_path, '/') && layout_context_required_by_path($router_item['path'])) {
     $message = t('The path entered will create a new page and disable the current "@old_path". If you intended to add a layout for "@old_path", use the path "@new_path" and add a URL path condition for "@old_path".', array('@new_path' => $router_item['path'], '@old_path' => $layout->getPath()));
     if (backdrop_is_ajax()) {
       backdrop_set_message($message, 'warning');
diff --git a/core/modules/path/path.module b/core/modules/path/path.module
index 1aa95a729b..24cd06b585 100644
--- a/core/modules/path/path.module
+++ b/core/modules/path/path.module
@@ -503,7 +503,7 @@ function path_entity_update(Entity $entity) {
     );
 
     // Trim whitespace and slashes from alias start and end.
-    $path['alias'] = trim($path['alias'], " \t\n\r\0\x0B/");
+    $path['alias'] = trim((string) $path['alias'], " \t\n\r\0\x0B/");
 
     // Save an automatic alias if specified.
     if ($path['auto']) {
diff --git a/core/modules/simpletest/tests/pager.test b/core/modules/simpletest/tests/pager.test
index 0e755bc2c9..5b83df8e71 100644
--- a/core/modules/simpletest/tests/pager.test
+++ b/core/modules/simpletest/tests/pager.test
@@ -160,6 +160,6 @@ class PagerFunctionalWebTestCase extends BackdropWebTestCase {
     if (!isset($message)) {
       $message = "Class .$class not found.";
     }
-    $this->assertTrue(strpos($element['class'], $class) === FALSE, $message);
+    $this->assertTrue(strpos((string) $element['class'], $class) === FALSE, $message);
   }
 }
